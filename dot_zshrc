#Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH="/Users/aji/.oh-my-zsh"

NC='\033[0m' # no color
RED='\033[0;31m'
ORANGE='\033[0;33m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'

export TERM="xterm-256color"
echo "${RED} _____                     _   _     _               _        "
echo "${RED}|  ___|                   | | | |   (_)             (_)       "
echo "${ORANGE}| |____   _____ _ __ _   _| |_| |__  _ _ __   __ _   _ ___    "
echo "${YELLOW}|  __\ \ / / _ \ '__| | | | __| '_ \| | '_ \ / _\` | | / __|   "
echo "${GREEN}| |___\ V /  __/ |  | |_| | |_| | | | | | | | (_| | | \__ \   "
echo "${BLUE}\____/ \_/ \___|_|   \__, |\__|_| |_|_|_| |_|\__, | |_|___/   "
echo "${CYAN}                      __/ |                   __/ |           "
echo "${PURPLE}                     |___/                   |___/            "
echo "${RED}  __ _                                  _        _     _      "
echo "${RED} / _(_)                                | |      | |   | |     "
echo "${ORANGE}| |_ _  __ _ _   _ _ __ ___  ___  _   _| |_ __ _| |__ | | ___ "
echo "${YELLOW}|  _| |/ _\` | | | | '__/ _ \/ _ \| | | | __/ _\` | '_ \| |/ _ \\"
echo "${GREEN}| | | | (_| | |_| | | |  __/ (_) | |_| | || (_| | |_) | |  __/"
echo "${BLUE}|_| |_|\__, |\__,_|_|  \___|\___/ \__,_|\__\__,_|_.__/|_|\___|"
echo "${CYAN}        __/ |                                                 "
echo "${PURPLE}       |___/                                                  ${NC}"

### Setup Options

# type `..` instead of `cd ..`
setopt auto_cd

### Alias File
source ~/.aliases

export EDITOR="nvim"

### Oh-my-zsh setup
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  git
  bundler
  common-aliases
  gem
  npm
  ruby
  rbenv
  yarn
  z
  zsh-autosuggestions
  alias-tips
  docker
)

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=3
echo "sourcing oh-my-zsh"
source $ZSH/oh-my-zsh.sh

### MIRS 1.1
echo "Adding MIRS cli to path"
export PATH="/Users/aji/dev/mirs-cli/bin:${PATH}"
ms() {
  eval "$(mirs aws current-session-script)"
}
ml() {
  eval "$(mirs aws login)"
}



### NVM
echo "Loading NVM"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

echo "Loading NVM bash completion"
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

echo "Loading FZF"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

echo "Setting up ssh keys"
eval "$(ssh-agent -s)" && sshkey

echo "Initializing p10k prompt"
echo "To customize prompt, run `p10k configure` or edit ~/.p10k.zsh."
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    nvm use
  elif [[ $(nvm version) != $(nvm version default)  ]]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

set -o vi

echo "Initializing Marker: The terminal command palette"
[[ -s "$HOME/.local/share/marker/marker.sh" ]] && source "$HOME/.local/share/marker/marker.sh"

echo "Initializing rbenv"
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

function lpf {
  lpass ls | grep -o -m 1 "$1.*[0-9]" | sed 's/.*\[id\: //'
}

function lps {
  LP=`lpf $1`
  lpass show $LP
}

function lpl {
  echo $LP
}

function lpp {
  if [ $# -eq 0 ]; then
    lpass show --password $LP | pbcopy
    echo 'previous lastpass search result copied to clipboard!'
    return
  fi

  lpass show --password `lpf $1` | pbcopy

  if [ $? -eq 0 ]; then
    echo 'password copied to clipboard!'
  fi
}

clear

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"
RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"


